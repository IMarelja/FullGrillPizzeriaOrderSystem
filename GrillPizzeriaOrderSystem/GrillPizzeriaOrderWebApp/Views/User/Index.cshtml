@using ModelConstants
@using Microsoft.AspNetCore.Antiforgery
@{
    ViewData["Title"] = "My Account";
}

<div id="messageForPasswordAndInfo" class="alert visually-hidden" role="alert"></div>

<link href="https://fonts.googleapis.com/icon?family=Material+Icons+Outlined" rel="stylesheet">

<div class="container mt-4">
    <div class="row g-4">
        <!-- User Info -->
        <div class="col-lg-7 card shadow-sm">
            <div class="card-header d-flex align-items-center">
                <span class="material-icons-outlined me-2">person</span>
                <h5 class="mb-0">My Info</h5>
            </div>
            <partial name="_Info"/>
        </div>

        <!-- Change Password -->
        <div class="col-lg-5 card-body">
            <div class="card-header d-flex align-items-center">
                <span class="material-icons-outlined me-2">lock</span>
                <h5 class="mb-0">Change Password</h5>
            </div>
            <partial name="_ChangePassword" />
        </div>
    </div>
</div>

<script>
    
</script>


@section Scripts {
    <script>
        // User change form elements
        const $formUserInfo = $('#userInfoForm');
        const $emailInput = $('#Email');
        const $firstNameInput = $('#FirstName');
        const $lastNameInput = $('#LastName');
		const $phoneInput = $('#Phone');


		// Password change form elements
        const $formPassword = $('#changePasswordForm');
		const $currentPasswordInput = $('#CurrentPassword');
        const $newPasswordInput = $('#NewPassword');
        const $confirmNewPasswordInput = $('#ConfirmNewPassword');

		// Message box for feedback
        const messageBox = document.getElementById('messageForPasswordAndInfo');

        $(document).ready(function () {

            LoadUserInfo();

            $formPassword.submit(function (e) {
                e.preventDefault();
                if ($newPasswordInput.val() != $newPasswordInput.val()) {
                    showMessage("Passwords do not match", false);
                } else {
                    ChangePasswordCall();
                }
            });

			$formUserInfo.submit(function (e) {
				e.preventDefault();
				UpdateUserInfoCall();
            });
        });

        

        function showMessage(text, isSuccess) {
            messageBox.classList.remove("visually-hidden", "alert-success", "alert-danger");
            messageBox.classList.add(isSuccess ? "alert-success" : "alert-danger");
            messageBox.textContent = text;
        }
        
        function ChangePasswordCall() {
            $.ajax({
                type: "POST",
                url: "/Authentication/ChangePassword",
                dataType: "json",
                cache: false,
                data: {
                    currentPassword: $currentPasswordInput.val(),
                    newPassword: $newPasswordInput.val(),
                    confirmNewPassword: $confirmNewPasswordInput.val()
                },
                success: function (response) {
                    if (response.success) {
                        $formPassword[0].reset();
                        showMessage(response.message, true);
                    } else {
                        showMessage(response.message, false);
                    }
                },
                error: function (xhr, status, err) {
                    console.log('AJAX error:', status, err, 'HTTP:', xhr.status, 'Response:', xhr.responseText);
                    console.log('AJAX error:', status, err, 'HTTP:', xhr.status, 'Response:', xhr.responseText);

                    try {
                        // try parse JSON from 400 response
                        var response = JSON.parse(xhr.responseText);

                        if (response.errors) {
                            // Flatten errors into a string
                            var allErrors = response.errors
                                .map(e => e.field + ": " + e.errors.join("\n"))
                                .join(" | ");

                            showMessage(allErrors, false);
                        } else {
                            showMessage(response.message || "Validation failed.", false);
                        }
                    } catch (parseErr) {
                        // fallback if response wasn’t JSON
                        showMessage("AJAX: Error updating the password.", false);
                    }
                }
            });
        }

        function LoadUserInfo() {
            $.ajax({
                type: "GET",
                url: "/User/GetMe",
                dataType: "json",
                cache: false,
                success: function (response) {
                    if (response.success) {
                        renderUserInfoForm(response.data);
                    } else {
                        showMessage(response.message || "Failed to load user info.", false);
                    }
                },
                error: function (xhr, status, err) {
                    console.error('AJAX error:', status, err, 'HTTP:', xhr.status, 'Response:', xhr.responseText);
                    showMessage("Error loading user info.", false);
                }
            });
        }

        function UpdateUserInfoCall() {
            $.ajax({
                type: "POST",
                url: "/User/UpdateMe",
                dataType: "json",
                cache: false,
                data: {
                    email: $emailInput.val(),
                    firstName: $firstNameInput.val(),
                    lastName: $lastNameInput.val(),
					phone: $phoneInput.val()
                },
                success: function (response) {
                    if (response.success) {
                        $formUserInfo[0].reset();
                        LoadUserInfo();
                        showMessage(response.message, true);
                    } else {
                        showMessage(response.message, false);
                    }
                },
                error: function (xhr, status, err) {
                    console.log('AJAX error:', status, err, 'HTTP:', xhr.status, 'Response:', xhr.responseText);
                    console.log('AJAX error:', status, err, 'HTTP:', xhr.status, 'Response:', xhr.responseText);

                    try {
                        // try parse JSON from 400 response
                        var response = JSON.parse(xhr.responseText);

                        if (response.errors) {
                            // Flatten errors into a string
                            var allErrors = response.errors
                                .map(e => e.field + ": " + e.errors.join("\n"))
                                .join(" | ");

                            showMessage(allErrors, false);
                        } else {
                            showMessage(response.message || "Validation failed.", false);
                        }
                    } catch (parseErr) {
                        // fallback if response wasn’t JSON
                        showMessage("AJAX: Error updating the user info.", false);
                    }
                }
            });
        }

        function renderUserInfoForm(user) {
            $emailInput.val(user.email ?? '');
            $firstNameInput.val(user.firstName ?? '');
            $lastNameInput.val(user.lastName ?? '');
            $phoneInput.val(user.phone ?? '');
        }
    </script>
}